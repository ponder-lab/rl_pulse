"""
List of pulse sequences, either existing from literature,
identified by our collaborators at MIT, or identified by
our own RL algorithms.
"""

whh4 = [0, 1, 4, 0, 3, 2]

cory48 = [
    1, 3, 0, 2, 3, 0, 1, 3, 0,
    1, 3, 0, 1, 4, 0, 1, 3, 0,
    4, 2, 0, 3, 2, 0, 4, 2, 0,
    4, 2, 0, 4, 1, 0, 4, 2, 0,
    2, 3, 0, 2, 4, 0, 2, 3, 0,
    1, 4, 0, 2, 4, 0, 1, 4, 0,
    3, 2, 0, 3, 1, 0, 3, 2, 0,
    4, 1, 0, 3, 1, 0, 4, 1, 0
]

ideal6 = [3, 1, 1, 3, 2, 2]
yxx24 = [
    4, 1, 2, 3, 2, 2, 3, 2, 1, 4, 1, 1,
    3, 2, 1, 4, 1, 1, 4, 1, 2, 3, 2, 2
]
yxx48 = [
    3, 2, 2, 3, 2, 2, 4, 1, 1, 3, 2, 2,
    4, 1, 1, 4, 1, 1, 3, 2, 2, 3, 2, 2,
    4, 1, 1, 3, 2, 2, 4, 1, 1, 4, 1, 1,
    3, 2, 2, 4, 1, 1, 3, 2, 2, 4, 1, 1
]

# brute-force search
bf6 = [1, 1, 3, 1, 1, 3]
bf12 = [1, 1, 4, 1, 1, 4,
        2, 2, 4, 2, 2, 4]
bfr12 = [1, 4, 4, 1, 4, 4,
         1, 3, 3, 1, 3, 3]

# vanilla MCTS search
mcts12_1 = [0, 1, 0, 3, 0, 1, 0, 1, 0, 3, 0, 1]
mcts12_2 = [4, 0, 4, 1, 4, 4, 3, 4, 2, 2, 2, 0]
mcts12_3 = [4, 4, 4, 1, 0, 3, 3, 0, 1, 3, 3, 4]
mcts12_4 = [3, 0, 3, 1, 3, 0, 3, 2, 1, 1, 1, 2]
mcts24 = [4, 2, 3, 4, 2, 1, 3, 2, 0, 2, 2, 3,
          4, 0, 3, 1, 2, 1, 3, 4, 1, 1, 1, 2]

# AlphaZero MCTS search
# az1 spends equal time on each axis, is cyclic,
# but has low fidelity. Why??
az1 = [
    0, 3, 3, 1, 1, 2, 3, 4, 0, 1, 3, 3,
    1, 0, 2, 2, 2, 0, 3, 3, 4, 1, 3, 3,
    2, 2, 4, 3, 1, 1, 2, 1, 4, 0, 2, 2,
    3, 2, 0, 1, 2, 1, 1, 4, 4, 0, 0, 3
]
# allegedly has reward of 1.26, not terrible
az2 = [
    1, 2, 0, 1, 3, 1, 1, 1, 4, 4, 0, 0,
    1, 4, 1, 0, 1, 4, 1, 0, 2, 1, 3, 0,
    2, 2, 0, 1, 1, 3, 4, 2, 4, 4, 2, 0,
    1, 0, 0, 2, 4, 3, 2, 0, 1, 1, 0, 4
]
# 2020-01-16
# below are 5 of the best-performing time-suspension
# pulse sequence I found from vanilla MCTS (out of 5000 pulse sequences)
# the rewards for the following pulse sequence are
# 2.24, 2.12, 2.07, 2.00, 1.91. Not terrible, but not good compared to
# yxx48 sequence with reward of 3.45.
mcts48_1 = [
    2, 2, 2, 2, 2, 3, 2, 0, 3, 2, 3, 1,
    4, 4, 4, 3, 3, 2, 3, 1, 2, 2, 2, 4,
    3, 2, 1, 4, 4, 4, 1, 3, 0, 3, 1, 1,
    1, 2, 1, 3, 1, 0, 4, 0, 4, 4, 3, 4
]
mcts48_2 = [
    1, 0, 4, 1, 3, 4, 1, 0, 1, 4, 1, 1,
    0, 1, 3, 1, 0, 4, 4, 0, 2, 3, 3, 4,
    3, 1, 3, 1, 2, 0, 3, 1, 3, 0, 3, 3,
    3, 4, 2, 4, 0, 1, 3, 2, 1, 0, 1, 0
]
mcts48_3 = [
    3, 0, 3, 2, 2, 2, 3, 3, 4, 2, 1, 3,
    2, 1, 2, 2, 1, 0, 3, 1, 2, 1, 4, 1,
    4, 1, 1, 3, 1, 1, 4, 4, 4, 4, 1, 0,
    2, 3, 3, 0, 1, 0, 1, 4, 0, 0, 2, 0
]
mcts48_4 = [
    4, 2, 3, 4, 1, 2, 2, 2, 1, 2, 2, 1,
    0, 4, 4, 1, 2, 2, 0, 1, 4, 4, 3, 1,
    0, 1, 0, 3, 0, 1, 1, 2, 4, 4, 3, 4,
    3, 4, 3, 3, 3, 0, 1, 1, 2, 2, 0, 0
]
mcts48_4_1 = [
    2, 2, 0, 2, 2, 1, 1, 4, 2, 3, 3, 1,
    0, 2, 0, 4, 0, 0, 2, 4, 4, 0, 2, 0,
    2, 1, 2, 0, 4, 3, 0, 4, 0, 0, 4, 2,
    2, 4, 0, 2, 0, 4, 0, 3, 1, 3, 4, 2
]
# from 2021-01-17 run (many more jobs), there
# actually seems to be some promise with this technique!
mcts48_5 = [  # reward is 3.117526668836672
    3, 0, 2, 2, 3, 4, 0, 3, 2, 3, 2, 3,
    3, 2, 2, 3, 2, 3, 3, 1, 0, 4, 0, 1,
    4, 3, 3, 3, 3, 1, 0, 3, 2, 3, 0, 1,
    3, 0, 0, 3, 0, 3, 0, 0, 1, 0, 0, 0
]
mcts48_6 = [  # 3.145176524409188
    3, 2, 3, 0, 4, 4, 4, 2, 3, 3, 2, 3,
    1, 3, 4, 1, 1, 1, 3, 2, 4, 3, 0, 2,
    2, 2, 1, 2, 0, 1, 1, 1, 2, 3, 1, 3,
    1, 1, 2, 1, 2, 4, 2, 2, 4, 0, 0, 0
]
mcts48_7 = [  # 3.4308794670277973
    2, 4, 3, 2, 3, 2, 4, 3, 0, 3, 3, 2,
    3, 1, 3, 4, 1, 4, 1, 1, 0, 3, 3, 3,
    0, 1, 1, 4, 2, 4, 1, 4, 0, 1, 2, 3,
    1, 3, 1, 0, 1, 2, 0, 3, 0, 3, 3, 0
]

# from 2/5 job
az3 = [  # 2.12 reward, vs 2.38 for yxx48
    2, 3, 3, 3, 3, 2, 3, 2, 4, 2, 4, 1,
    2, 3, 3, 3, 0, 3, 0, 2, 3, 2, 2, 2,
    3, 2, 0, 4, 2, 2, 2, 0, 4, 4, 3, 1,
    3, 4, 4, 0, 0, 0, 2, 2, 2, 0, 3, 2
]

# from 2/18 job
az12 = [  # 5.68 reward, vs 5.6 for yxx24 and 5 for yxx48
    1, 4, 2, 2, 3, 2, 2, 3, 1, 1, 4, 1
]

az12_1 = [  # 5.6578 reward
    3, 1, 4, 4, 2, 4, 1, 4, 4, 2, 3, 3
]

# from 2/23 job
az48 = [  # 4.3 reward apparently for strongly coupled spin system
    4, 2, 1, 1, 2, 1, 2, 0, 4, 0, 3, 1,
    3, 2, 3, 0, 0, 2, 4, 4, 2, 1, 2, 2,
    2, 4, 0, 0, 2, 3, 4, 3, 4, 0, 1, 4,
    3, 1, 3, 4, 0, 0, 4, 0, 2, 0, 0, 4
]

# from 2/26 job
az48_1 = [  # 4.4 reward vs 6.7 for cory48, 6.2 for yxx48
    3, 1, 0, 0, 0, 0, 1, 3, 4, 3, 2, 3,
    4, 0, 1, 0, 3, 0, 1, 2, 4, 4, 3, 3,
    0, 0, 1, 4, 0, 3, 0, 0, 0, 3, 1, 2,
    0, 0, 0, 4, 0, 1, 0, 0, 0, 3, 0, 0
]

# from 3/1 job
az48_2 = [
    3, 0, 1, 0, 1, 1, 3, 0, 2, 1, 3, 1,
    0, 3, 0, 0, 4, 4, 2, 2, 4, 3, 4, 3,
    1, 4, 4, 3, 0, 4, 4, 2, 4, 4, 3, 4,
    0, 4, 3, 1, 4, 4, 4, 4, 4, 0, 0, 1
]

# from 3/4 job
az48_3 = [
    2, 3, 3, 1, 3, 3, 4, 1, 1, 4, 1, 1,
    3, 1, 1, 4, 1, 1, 4, 1, 4, 1, 1, 4,
    2, 2, 3, 3, 2, 3, 3, 4, 1, 4, 4, 1,
    4, 1, 1, 4, 1, 1, 4, 2, 2, 4, 2, 2
]

# from 3/6 job
az12_2 = [1, 3, 3, 1, 3, 3, 1, 4, 4, 1, 4, 4]

# from 3/8 job
az24 = [
    3, 3, 1, 3, 3, 1, 3, 3, 2, 3, 3, 2,
    4, 4, 2, 4, 4, 2, 4, 4, 1, 4, 4, 1
]